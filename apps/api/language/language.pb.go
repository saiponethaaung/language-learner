// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: language.proto

package language

import (
	common "github.com/saiponethaaung/language-learner/apps/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLanguagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguagesRequest) Reset() {
	*x = GetLanguagesRequest{}
	mi := &file_language_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesRequest) ProtoMessage() {}

func (x *GetLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesRequest.ProtoReflect.Descriptor instead.
func (*GetLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{0}
}

func (x *GetLanguagesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLanguagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLanguagesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLanguageRequest) Reset() {
	*x = CreateLanguageRequest{}
	mi := &file_language_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLanguageRequest) ProtoMessage() {}

func (x *CreateLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLanguageRequest.ProtoReflect.Descriptor instead.
func (*CreateLanguageRequest) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLanguageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLanguageRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UpdateLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLanguageRequest) Reset() {
	*x = UpdateLanguageRequest{}
	mi := &file_language_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageRequest) ProtoMessage() {}

func (x *UpdateLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageRequest.ProtoReflect.Descriptor instead.
func (*UpdateLanguageRequest) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLanguageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLanguageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLanguageRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UpdateLanguageStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLanguageStatusRequest) Reset() {
	*x = UpdateLanguageStatusRequest{}
	mi := &file_language_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLanguageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageStatusRequest) ProtoMessage() {}

func (x *UpdateLanguageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateLanguageStatusRequest) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLanguageStatusRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLanguageStatusRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type LanguageObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LanguageObject) Reset() {
	*x = LanguageObject{}
	mi := &file_language_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageObject) ProtoMessage() {}

func (x *LanguageObject) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageObject.ProtoReflect.Descriptor instead.
func (*LanguageObject) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{4}
}

func (x *LanguageObject) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LanguageObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LanguageObject) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LanguageObject) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LanguageObject) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PaginationResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Data          []*LanguageObject        `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *common.PaginationObject `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_language_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{5}
}

func (x *PaginationResponse) GetData() []*LanguageObject {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PaginationResponse) GetPagination() *common.PaginationObject {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetLanguagesByIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int32                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguagesByIdsRequest) Reset() {
	*x = GetLanguagesByIdsRequest{}
	mi := &file_language_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguagesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesByIdsRequest) ProtoMessage() {}

func (x *GetLanguagesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetLanguagesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{6}
}

func (x *GetLanguagesByIdsRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LanguagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []*LanguageObject      `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LanguagesResponse) Reset() {
	*x = LanguagesResponse{}
	mi := &file_language_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguagesResponse) ProtoMessage() {}

func (x *LanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_language_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguagesResponse.ProtoReflect.Descriptor instead.
func (*LanguagesResponse) Descriptor() ([]byte, []int) {
	return file_language_proto_rawDescGZIP(), []int{7}
}

func (x *LanguagesResponse) GetLanguages() []*LanguageObject {
	if x != nil {
		return x.Languages
	}
	return nil
}

var File_language_proto protoreflect.FileDescriptor

const file_language_proto_rawDesc = "" +
	"\n" +
	"\x0elanguage.proto\x12\blanguage\x1a\fcommon.proto\"S\n" +
	"\x13GetLanguagesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"?\n" +
	"\x15CreateLanguageRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\"O\n" +
	"\x15UpdateLanguageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\"E\n" +
	"\x1bUpdateLanguageStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\bR\x06status\"\x84\x01\n" +
	"\x0eLanguageObject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x1c\n" +
	"\tcreatedAt\x18\x04 \x01(\tR\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\x05 \x01(\tR\tupdatedAt\"|\n" +
	"\x12PaginationResponse\x12,\n" +
	"\x04data\x18\x01 \x03(\v2\x18.language.LanguageObjectR\x04data\x128\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x18.common.PaginationObjectR\n" +
	"pagination\",\n" +
	"\x18GetLanguagesByIdsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x05R\x03ids\"K\n" +
	"\x11LanguagesResponse\x126\n" +
	"\tlanguages\x18\x01 \x03(\v2\x18.language.LanguageObjectR\tlanguages2\xb2\x04\n" +
	"\x0fLanguageService\x12M\n" +
	"\fGetLanguages\x12\x1d.language.GetLanguagesRequest\x1a\x1c.language.PaginationResponse\"\x00\x12V\n" +
	"\x11GetLanguagesByIds\x12\".language.GetLanguagesByIdsRequest\x1a\x1b.language.LanguagesResponse\"\x00\x12?\n" +
	"\vGetLanguage\x12\x14.common.IntIDRequest\x1a\x18.language.LanguageObject\"\x00\x12M\n" +
	"\x0eCreateLanguage\x12\x1f.language.CreateLanguageRequest\x1a\x18.language.LanguageObject\"\x00\x12M\n" +
	"\x0eUpdateLanguage\x12\x1f.language.UpdateLanguageRequest\x1a\x18.language.LanguageObject\"\x00\x12Y\n" +
	"\x14UpdateLanguageStatus\x12%.language.UpdateLanguageStatusRequest\x1a\x18.language.LanguageObject\"\x00\x12>\n" +
	"\x0eDeleteLanguage\x12\x14.common.IntIDRequest\x1a\x14.common.EmptyRequest\"\x00B>Z<github.com/saiponethaaung/language-learner/apps/api/languageb\x06proto3"

var (
	file_language_proto_rawDescOnce sync.Once
	file_language_proto_rawDescData []byte
)

func file_language_proto_rawDescGZIP() []byte {
	file_language_proto_rawDescOnce.Do(func() {
		file_language_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_language_proto_rawDesc), len(file_language_proto_rawDesc)))
	})
	return file_language_proto_rawDescData
}

var file_language_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_language_proto_goTypes = []any{
	(*GetLanguagesRequest)(nil),         // 0: language.GetLanguagesRequest
	(*CreateLanguageRequest)(nil),       // 1: language.CreateLanguageRequest
	(*UpdateLanguageRequest)(nil),       // 2: language.UpdateLanguageRequest
	(*UpdateLanguageStatusRequest)(nil), // 3: language.UpdateLanguageStatusRequest
	(*LanguageObject)(nil),              // 4: language.LanguageObject
	(*PaginationResponse)(nil),          // 5: language.PaginationResponse
	(*GetLanguagesByIdsRequest)(nil),    // 6: language.GetLanguagesByIdsRequest
	(*LanguagesResponse)(nil),           // 7: language.LanguagesResponse
	(*common.PaginationObject)(nil),     // 8: common.PaginationObject
	(*common.IntIDRequest)(nil),         // 9: common.IntIDRequest
	(*common.EmptyRequest)(nil),         // 10: common.EmptyRequest
}
var file_language_proto_depIdxs = []int32{
	4,  // 0: language.PaginationResponse.data:type_name -> language.LanguageObject
	8,  // 1: language.PaginationResponse.pagination:type_name -> common.PaginationObject
	4,  // 2: language.LanguagesResponse.languages:type_name -> language.LanguageObject
	0,  // 3: language.LanguageService.GetLanguages:input_type -> language.GetLanguagesRequest
	6,  // 4: language.LanguageService.GetLanguagesByIds:input_type -> language.GetLanguagesByIdsRequest
	9,  // 5: language.LanguageService.GetLanguage:input_type -> common.IntIDRequest
	1,  // 6: language.LanguageService.CreateLanguage:input_type -> language.CreateLanguageRequest
	2,  // 7: language.LanguageService.UpdateLanguage:input_type -> language.UpdateLanguageRequest
	3,  // 8: language.LanguageService.UpdateLanguageStatus:input_type -> language.UpdateLanguageStatusRequest
	9,  // 9: language.LanguageService.DeleteLanguage:input_type -> common.IntIDRequest
	5,  // 10: language.LanguageService.GetLanguages:output_type -> language.PaginationResponse
	7,  // 11: language.LanguageService.GetLanguagesByIds:output_type -> language.LanguagesResponse
	4,  // 12: language.LanguageService.GetLanguage:output_type -> language.LanguageObject
	4,  // 13: language.LanguageService.CreateLanguage:output_type -> language.LanguageObject
	4,  // 14: language.LanguageService.UpdateLanguage:output_type -> language.LanguageObject
	4,  // 15: language.LanguageService.UpdateLanguageStatus:output_type -> language.LanguageObject
	10, // 16: language.LanguageService.DeleteLanguage:output_type -> common.EmptyRequest
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_language_proto_init() }
func file_language_proto_init() {
	if File_language_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_language_proto_rawDesc), len(file_language_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_language_proto_goTypes,
		DependencyIndexes: file_language_proto_depIdxs,
		MessageInfos:      file_language_proto_msgTypes,
	}.Build()
	File_language_proto = out.File
	file_language_proto_goTypes = nil
	file_language_proto_depIdxs = nil
}
